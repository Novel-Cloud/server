cloud:
  aws:
    credentials:
      accessKey: ${novel.cloud.aws.credentials.accessKey}
      secretKey: ${novel.cloud.aws.credentials.secretKey}
    s3:
      bucket: ${novel.cloud.aws.s3.bucket}
      dir: ${novel.cloud.aws.s3.dir}
    cloudFront:
      distributionDomain: ${novel.cloud.aws.cloudFront.distributionDomain}
    region:
      static:
        ap-northeast-2
    stack:
      auto:
        false

spring:
  config:
    activate:
      on-profile: local

  datasource:
    hikari:
      jdbc-url: ${novel.spring.datasource.url}
      username: ${novel.spring.datasource.username}
      password: ${novel.spring.datasource.password}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${novel.spring.oauth.google.client}
            client-secret: ${novel.spring.oauth.google.secret}
            redirect-uri: ${novel.spring.oauth.google.redirect-uri}
            scope:
              - email
              - profile

    jwt:
      header: ${novel.spring.jwt.header}
      secret: ${novel.spring.jwt.secret}
      access-token-validity-in-seconds: ${novel.spring.jwt.access-token-validity-in-seconds}
      refresh-token-validity-in-seconds: ${novel.spring.jwt.refresh-token-validity-in-seconds}

#  profiles:
#    include: 'oauth'

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: ERROR
